// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© FxCloudTrader

//@version=5
indicator(title="Candlestick Patterns", shorttitle="Candlestick", overlay=true, precision = 0)

// ------------------------------------ COPY OF Engulfing Candlestick Pattern ------------------------------------

// Options for setting the minimum requirement of candlestick body to range percentage.
// It's less important for the left formation to have a fat body.
// However, for the right formation, namely the engulfing candle, 
// we want to see higher percentage of body to price range and small wicks
min_body_to_range_pct_lt   = input.int(0, 'Minimum body % for left bar',   minval=0, maxval=100, step=5, tooltip = 'Minimum body to price range percentage for the left formation')
min_body_to_range_pct_rt  = input.int(0, 'Minimum body % for right bar',  minval=0, maxval=100, step=5, tooltip = 'Minimum body to price range percentage for the right formation')

// Only show engulfing signal if the body of the engulfing candle is larger than 1 Average True Range(ATR)
// The idea is we prefer engulfing candles that show dominance and mean business.
filter_by_atr = input.bool(false, "Only display superior engulfing signals", "Only display engulfing candles whose body range is larger than 1 ATR")

display_body_to_range_label = input.bool(false, "Display body to price range percentage")
display_body_range_label = input.bool(false, "Display body of price range")

setting_engulfing_bar_close_beyond_prev_max = input.bool(true, "Engulfing Candle Closes Above/Below Prior Bar's High/Low")

getRange(x, y) => math.abs(x - y)

atr = ta.atr(14)

engulfing_cond_dn = open >= math.max(close[1],open[1])  and 
                     close <= math.min(close[1],open[1]) and 
                     open > close and 
                     getRange(open[1], close[1])/getRange(high[1], low[1]) * 100> min_body_to_range_pct_lt and
                     getRange(open, close)/getRange(high, low) * 100> min_body_to_range_pct_rt
con_dn = engulfing_cond_dn
if filter_by_atr and engulfing_cond_dn
    con_dn := getRange(open, close)>atr?true:false
engulfing_bar_close_below_prev_max = close < low[1]
if setting_engulfing_bar_close_beyond_prev_max and engulfing_cond_dn
    con_dn := engulfing_bar_close_below_prev_max ? true:false
if setting_engulfing_bar_close_beyond_prev_max and engulfing_cond_dn and filter_by_atr
    con_dn := engulfing_bar_close_below_prev_max ? true:false

engulfing_cond_up = open <= math.min(close[1],open[1]) and 
                     close >= math.max(close[1],open[1]) and 
                     open < close and 
                     getRange(open[1], close[1])/getRange(high[1], low[1]) * 100> min_body_to_range_pct_lt and
                     getRange(open, close)/getRange(high, low) * 100> min_body_to_range_pct_rt

con_up = engulfing_cond_up
if filter_by_atr and engulfing_cond_up
    con_up := getRange(open, close)>atr?true:false
engulfing_bar_close_above_prev_max = close > high[1]
if setting_engulfing_bar_close_beyond_prev_max and engulfing_cond_up
    con_up := engulfing_bar_close_above_prev_max ? true:false
if setting_engulfing_bar_close_beyond_prev_max and engulfing_cond_up and filter_by_atr
    con_up := engulfing_bar_close_above_prev_max ? true:false

// Display engulfing body percentage in comparison with its range (high and low)
if display_body_to_range_label and (engulfing_cond_dn or engulfing_cond_up)
    label.new(bar_index, engulfing_cond_dn?high:low, 
                 str.tostring(math.ceil(getRange(open, close)/getRange(high, low) * 100)) + "%", 
                 yloc = engulfing_cond_dn?yloc.abovebar:yloc.belowbar, 
                 style = engulfing_cond_dn?label.style_label_down:label.style_label_up)

// Display engulfing body in points
if display_body_range_label and (engulfing_cond_dn or engulfing_cond_up)
    label.new(bar_index, engulfing_cond_dn?high:low, 
                 "body:" + str.tostring(getRange(open, close)) + "\natr:" + str.tostring(atr, format.mintick), 
                 yloc = engulfing_cond_dn?yloc.abovebar:yloc.belowbar, 
                 style = engulfing_cond_dn?label.style_label_down:label.style_label_up)

plotshape(con_dn, "Bearish Engulfing Circle", shape.square, location.abovebar, color = color.new(color.blue, 50), size = size.auto) // text = "Engulfing"
plotshape(con_up, "Bullish Engulfing Circle", shape.square, location.belowbar, color = color.new(color.blue, 50), size = size.auto) // text = "Engulfing"

// ------------------------------------ END OF COPY OF Engulfing Candlestick Pattern ------------------------------------


// ------------------------------------ COPY OF Inside Bar Candlestick Pattern ------------------------------------
// This is a 3-bar formation setup
// The range of -1 bar is capped within the -2 bar's
// The direction of current bar dictates the direction of the signal
// indicator(title="Inside Bar Candlestick Pattern", shorttitle="Inside Bar", overlay=true, precision = 0)

// getRange(x, y) => math.abs(x - y)
range_bar_2 = getRange(high[2], low[2])
range_bar_1 = getRange(high[1], low[1])

bool insbar_cond_up = low[2] < low[1] and high[2] > high[1] and close > open
bool insbar_cond_dn = low[2] < low[1] and high[2] > high[1] and close < open

plotshape(insbar_cond_up, "Inside Bar Bullish", shape.cross, location.belowbar, color = color.new(color.black, 50), size = size.auto) // text = ""
plotshape(insbar_cond_dn, "Inside Bar Bearish", shape.cross, location.abovebar, color = color.new(color.black, 50), size = size.auto) // text = ""

// ------------------------------------END OF COPY OF Inside Bar Candlestick Pattern ------------------------------------
